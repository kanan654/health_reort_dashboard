import streamlit as st
from fpdf import FPDF
from datetime import datetime

# Title with hospital emoji and styling
st.markdown("<h1 style='text-align: center;'>🏥 AI-Based Health Report Dashboard</h1>", unsafe_allow_html=True)
st.markdown("---")

# Sidebar styling
st.sidebar.header("Enter Your Health Data")

# Input fields in sidebar
heart_rate = st.sidebar.number_input("Heart Rate (bpm)", min_value=30, max_value=200)
steps = st.sidebar.number_input("Steps Walked Today", min_value=0)
sleep_quality = st.sidebar.slider("Sleep Quality (%)", 0, 100, 75)
device_status = st.sidebar.selectbox("Is Wearable Device Working?", ["Yes", "No"])

# Generate advice (simplified AI logic)
if heart_rate > 100:
    advice = "Your heart rate is high. Consider resting and consulting a doctor if it persists."
elif sleep_quality < 60:
    advice = "Your sleep quality is low. Try to maintain a consistent sleep schedule."
else:
    advice = "Your health indicators are within normal range. Keep up the good habits!"

# Display Summary
st.subheader("Summary:")
st.markdown(f"""
- *Heart Rate:* {heart_rate} bpm  
- *Steps Walked:* {steps}  
- *Sleep Quality:* {sleep_quality}%  
- *Device Status:* {device_status}  
- *Advice:* {advice}  
""")

# Generate PDF
if st.button("Generate PDF Report"):
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    pdf = FPDF()
    pdf.add_page()
    pdf.set_font("Arial", size=12)
    pdf.cell(200, 10, txt="Health Report", ln=True, align="C")

    pdf.ln(10)
    pdf.cell(200, 10, txt=f"Date & Time: {now}", ln=True)
    pdf.cell(200, 10, txt=f"Heart Rate: {heart_rate} bpm", ln=True)
    pdf.cell(200, 10, txt=f"Steps: {steps}", ln=True)
    pdf.cell(200, 10, txt=f"Sleep Quality: {sleep_quality}%", ln=True)
    pdf.cell(200, 10, txt=f"Device Working: {device_status}", ln=True)
    pdf.multi_cell(0, 10, txt=f"Advice: {advice}")

    pdf.ln(10)
    pdf.set_font("Arial", style='I', size=10)
    pdf.multi_cell(0, 10, txt="This report was generated by an AIML-based health tracker system.")

    # Save PDF to local path (Windows/Linux/Mac compatible)
    pdf_path = "health_report.pdf"
    pdf.output(pdf_path)

    # Provide download button
    with open(pdf_path, "rb") as file:
        st.download_button("Download Report", file, file_name="health_report.pdf")

# Footer
st.markdown("---")
st.markdown("<p style='text-align: center; font-size: 12px;'>© 2025 AIML Health Tracker</p>", unsafe_allow_html=True)